[
  {
    "path": "core/decorators/index.js",
    "info": {
      "name": "index.js",
      "description": "",
      "features": [],
      "examples": [],
      "exports": [
        "deprecate",
        "mixin"
      ],
      "related": [
        "."
      ],
      "see": []
    }
  },
  {
    "path": "core/index.js",
    "info": {
      "name": "index.js",
      "description": "Provides the foundational building blocks of AJS, including a powerful class system, deferred promises, and decorators for enhancing classes and methods.",
      "features": [
        {
          "namespace": "ClassSystem",
          "property": "inheritance",
          "type": "Object",
          "description": "Advanced class inheritance with $extends and $mixins support"
        },
        {
          "namespace": "ClassSystem",
          "property": "constructor",
          "type": "Object",
          "description": "Constructor lifecycle management with $ctor"
        },
        {
          "namespace": "ClassSystem",
          "property": "methods",
          "type": "Object",
          "description": "Method overriding and super calls"
        },
        {
          "namespace": "ClassSystem",
          "property": "static",
          "type": "Object",
          "description": "Static and instance method support"
        },
        {
          "namespace": "Decorators",
          "property": "functions",
          "type": "Object",
          "description": "Function and class decorators"
        },
        {
          "namespace": "Decorators",
          "property": "builtin",
          "type": "Object",
          "description": "Built-in decorators like @mixin and @deprecate"
        },
        {
          "namespace": "Decorators",
          "property": "factory",
          "type": "Object",
          "description": "Custom decorator factory support"
        },
        {
          "namespace": "Decorators",
          "property": "properties",
          "type": "Object",
          "description": "Method and property decorators"
        },
        {
          "namespace": "Deferred",
          "property": "promise",
          "type": "Object",
          "description": "Promise-like interface with resolve/reject"
        },
        {
          "namespace": "Deferred",
          "property": "progress",
          "type": "Object",
          "description": "Progress tracking with notify"
        },
        {
          "namespace": "Deferred",
          "property": "chain",
          "type": "Object",
          "description": "Chainable then/catch/finally"
        },
        {
          "namespace": "Deferred",
          "property": "cancel",
          "type": "Object",
          "description": "Cancellation support"
        }
      ],
      "examples": [
        {
          "caption": "Class System with Inheritance",
          "code": "import { base } from 'xajs/core'\nconst MyClass = base.Class({\n$extends: ParentClass,\n$mixins: [SomeMixin],\n$ctor() {\nthis.name = 'example'\n},\nmethod() {\n// Method implementation\n}\n})\n"
        },
        {
          "caption": "Using Decorators",
          "code": "import { decorators } from 'xajs/core'\nclass Enhanced {\nenhancedMethod() {\n// Enhanced functionality\n}\n}\n"
        }
      ],
      "exports": [
        "base",
        "decorators"
      ],
      "related": [
        "."
      ],
      "see": [
        {
          "url": "https://ajs.dev/docs/core",
          "text": "Core Module Documentation"
        }
      ],
      "namespaces": {
        "ClassSystem": {
          "name": "ClassSystem",
          "properties": {
            "inheritance": {
              "type": "Object",
              "name": "inheritance",
              "description": "Advanced class inheritance with $extends and $mixins support"
            },
            "constructor": {
              "type": "Object",
              "name": "constructor",
              "description": "Constructor lifecycle management with $ctor"
            },
            "methods": {
              "type": "Object",
              "name": "methods",
              "description": "Method overriding and super calls"
            },
            "static": {
              "type": "Object",
              "name": "static",
              "description": "Static and instance method support"
            }
          }
        },
        "Decorators": {
          "name": "Decorators",
          "properties": {
            "functions": {
              "type": "Object",
              "name": "functions",
              "description": "Function and class decorators"
            },
            "builtin": {
              "type": "Object",
              "name": "builtin",
              "description": "Built-in decorators like @mixin and @deprecate"
            },
            "factory": {
              "type": "Object",
              "name": "factory",
              "description": "Custom decorator factory support"
            },
            "properties": {
              "type": "Object",
              "name": "properties",
              "description": "Method and property decorators"
            }
          }
        },
        "Deferred": {
          "name": "Deferred",
          "properties": {
            "promise": {
              "type": "Object",
              "name": "promise",
              "description": "Promise-like interface with resolve/reject"
            },
            "progress": {
              "type": "Object",
              "name": "progress",
              "description": "Progress tracking with notify"
            },
            "chain": {
              "type": "Object",
              "name": "chain",
              "description": "Chainable then/catch/finally"
            },
            "cancel": {
              "type": "Object",
              "name": "cancel",
              "description": "Cancellation support"
            }
          }
        }
      }
    }
  },
  {
    "path": "dom/index.js",
    "info": {
      "name": "index.js",
      "description": "Provides a lightweight virtual DOM implementation and utilities for DOM manipulation and event handling, with special optimizations for mobile devices.",
      "features": [
        {
          "namespace": "VirtualDOM",
          "property": "implementation",
          "type": "Object",
          "description": "Lightweight virtual DOM implementation"
        },
        {
          "namespace": "VirtualDOM",
          "property": "diff",
          "type": "Object",
          "description": "Efficient diff and patch algorithm"
        },
        {
          "namespace": "VirtualDOM",
          "property": "lifecycle",
          "type": "Object",
          "description": "Component lifecycle management"
        },
        {
          "namespace": "VirtualDOM",
          "property": "events",
          "type": "Object",
          "description": "Event delegation support"
        },
        {
          "namespace": "EventHandling",
          "property": "management",
          "type": "Object",
          "description": "Advanced event management"
        },
        {
          "namespace": "EventHandling",
          "property": "delegation",
          "type": "Object",
          "description": "Event delegation and bubbling"
        },
        {
          "namespace": "EventHandling",
          "property": "touch",
          "type": "Object",
          "description": "Mobile touch event optimization"
        },
        {
          "namespace": "EventHandling",
          "property": "lifecycle",
          "type": "Object",
          "description": "Event once and off support"
        },
        {
          "namespace": "URLParsing",
          "property": "parser",
          "type": "Object",
          "description": "Robust URL parsing and manipulation"
        },
        {
          "namespace": "URLParsing",
          "property": "query",
          "type": "Object",
          "description": "Query string handling"
        },
        {
          "namespace": "URLParsing",
          "property": "path",
          "type": "Object",
          "description": "Path normalization"
        },
        {
          "namespace": "URLParsing",
          "property": "params",
          "type": "Object",
          "description": "URL parameter extraction"
        }
      ],
      "examples": [
        {
          "caption": "Virtual DOM Creation",
          "code": "import { h } from 'xajs/dom'\nconst vnode = h('div', { className: 'container' }, [\nh('h1', null, 'Hello AJS!'),\nh('p', null, 'Welcome to the future of JavaScript.')\n])\n"
        },
        {
          "caption": "Event Handling",
          "code": "import { E } from 'xajs/dom'\nE.on(element, 'click', event => {\nconsole.log('Clicked:', event.target)\n})\nE.once(element, 'load', event => {\nconsole.log('Loaded once')\n})\n"
        },
        {
          "caption": "URL Parsing",
          "code": "import { UrlParser } from 'xajs/dom'\nconst parser = new UrlParser('https://example.com/path?query=value')\nconsole.log(parser.pathname) // '/path'\nconsole.log(parser.query)    // { query: 'value' }\n"
        }
      ],
      "exports": [
        "E",
        "UrlParser",
        "h",
        "tags"
      ],
      "related": [
        "."
      ],
      "see": [
        {
          "url": "https://ajs.dev/docs/dom",
          "text": "DOM Module Documentation"
        }
      ],
      "namespaces": {
        "VirtualDOM": {
          "name": "VirtualDOM",
          "properties": {
            "implementation": {
              "type": "Object",
              "name": "implementation",
              "description": "Lightweight virtual DOM implementation"
            },
            "diff": {
              "type": "Object",
              "name": "diff",
              "description": "Efficient diff and patch algorithm"
            },
            "lifecycle": {
              "type": "Object",
              "name": "lifecycle",
              "description": "Component lifecycle management"
            },
            "events": {
              "type": "Object",
              "name": "events",
              "description": "Event delegation support"
            }
          }
        },
        "EventHandling": {
          "name": "EventHandling",
          "properties": {
            "management": {
              "type": "Object",
              "name": "management",
              "description": "Advanced event management"
            },
            "delegation": {
              "type": "Object",
              "name": "delegation",
              "description": "Event delegation and bubbling"
            },
            "touch": {
              "type": "Object",
              "name": "touch",
              "description": "Mobile touch event optimization"
            },
            "lifecycle": {
              "type": "Object",
              "name": "lifecycle",
              "description": "Event once and off support"
            }
          }
        },
        "URLParsing": {
          "name": "URLParsing",
          "properties": {
            "parser": {
              "type": "Object",
              "name": "parser",
              "description": "Robust URL parsing and manipulation"
            },
            "query": {
              "type": "Object",
              "name": "query",
              "description": "Query string handling"
            },
            "path": {
              "type": "Object",
              "name": "path",
              "description": "Path normalization"
            },
            "params": {
              "type": "Object",
              "name": "params",
              "description": "URL parameter extraction"
            }
          }
        }
      }
    }
  },
  {
    "path": "fp/index.js",
    "info": {
      "name": "index.js",
      "description": "Core functional programming utilities focusing on pure function composition and immutable data handling.",
      "features": [
        {
          "namespace": "FunctionalCore",
          "property": "composition",
          "type": "Object",
          "description": "Pure function composition utilities"
        },
        {
          "namespace": "FunctionalCore",
          "property": "pointfree",
          "type": "Object",
          "description": "Point-free programming support"
        },
        {
          "namespace": "FunctionalCore",
          "property": "currying",
          "type": "Object",
          "description": "Function currying and partial application"
        },
        {
          "namespace": "FunctionalCore",
          "property": "immutable",
          "type": "Object",
          "description": "Immutable data handling patterns"
        }
      ],
      "examples": [
        {
          "caption": "",
          "code": "import { compose } from 'xajs/fp'\n// Create a pipeline of pure functions\nconst pipeline = compose(\nuppercase,\ntrim,\nnormalize\n)\n// Apply the transformation\nconst result = pipeline('  hello world  ')\n"
        }
      ],
      "exports": [
        "compose",
        "composeAsync"
      ],
      "related": [
        "."
      ],
      "see": [],
      "namespaces": {
        "FunctionalCore": {
          "name": "FunctionalCore",
          "properties": {
            "composition": {
              "type": "Object",
              "name": "composition",
              "description": "Pure function composition utilities"
            },
            "pointfree": {
              "type": "Object",
              "name": "pointfree",
              "description": "Point-free programming support"
            },
            "currying": {
              "type": "Object",
              "name": "currying",
              "description": "Function currying and partial application"
            },
            "immutable": {
              "type": "Object",
              "name": "immutable",
              "description": "Immutable data handling patterns"
            }
          }
        }
      }
    }
  },
  {
    "path": "functional/index.js",
    "info": {
      "name": "index.js",
      "description": "Provides a comprehensive set of functional programming utilities including function composition, currying, dependency injection, pub/sub system, and promise utilities.",
      "features": [
        {
          "namespace": "FunctionComposition",
          "property": "interceptors",
          "type": "Object",
          "description": "Advanced interceptors for function composition"
        },
        {
          "namespace": "FunctionComposition",
          "property": "async",
          "type": "Object",
          "description": "Support for async function composition"
        },
        {
          "namespace": "FunctionComposition",
          "property": "errorHandling",
          "type": "Object",
          "description": "Error handling in composition chains"
        },
        {
          "namespace": "FunctionComposition",
          "property": "middleware",
          "type": "Object",
          "description": "Middleware pattern support"
        },
        {
          "namespace": "DependencyInjection",
          "property": "decorators",
          "type": "Object",
          "description": "Decorator-based DI system"
        },
        {
          "namespace": "DependencyInjection",
          "property": "resolution",
          "type": "Object",
          "description": "Automatic dependency resolution"
        },
        {
          "namespace": "DependencyInjection",
          "property": "circular",
          "type": "Object",
          "description": "Circular dependency detection"
        },
        {
          "namespace": "DependencyInjection",
          "property": "scoping",
          "type": "Object",
          "description": "Scoped container support"
        },
        {
          "namespace": "EventSystem",
          "property": "pubsub",
          "type": "Object",
          "description": "Pub/Sub pattern implementation"
        },
        {
          "namespace": "EventSystem",
          "property": "priority",
          "type": "Object",
          "description": "Event prioritization"
        },
        {
          "namespace": "EventSystem",
          "property": "async",
          "type": "Object",
          "description": "Async event handling"
        },
        {
          "namespace": "EventSystem",
          "property": "cancellation",
          "type": "Object",
          "description": "Event cancellation"
        },
        {
          "namespace": "PromiseUtilities",
          "property": "lazy",
          "type": "Object",
          "description": "Promise-based lazy evaluation"
        },
        {
          "namespace": "PromiseUtilities",
          "property": "interception",
          "type": "Object",
          "description": "Promise chain interception"
        },
        {
          "namespace": "PromiseUtilities",
          "property": "fallback",
          "type": "Object",
          "description": "Fallback chain with tryNext"
        },
        {
          "namespace": "PromiseUtilities",
          "property": "timeout",
          "type": "Object",
          "description": "Timeout and retry support"
        }
      ],
      "examples": [
        {
          "caption": "Function Composition",
          "code": "import { helper } from 'xajs/functional'\nconst { intercepter } = helper\nconst enhance = intercepter.compose([\naddLogging,\naddValidation,\naddCaching\n])\n"
        },
        {
          "caption": "Dependency Injection",
          "code": "import { helper } from 'xajs/functional'\nconst { di } = helper\nclass Config {\ngetApiUrl() { return 'https://api.example.com' }\n}\n"
        },
        {
          "caption": "Pub/Sub Pattern",
          "code": "import { helper } from 'xajs/functional'\nconst { PS } = helper\nconst events = new PS()\nevents.on('userUpdate', user => {\nconsole.log('User updated:', user)\n})\nevents.emit('userUpdate', { id: 1, name: 'John' })\n"
        }
      ],
      "exports": [
        "helper"
      ],
      "related": [
        "."
      ],
      "see": [
        {
          "url": "https://ajs.dev/docs/functional",
          "text": "Functional Module Documentation"
        }
      ],
      "namespaces": {
        "FunctionComposition": {
          "name": "FunctionComposition",
          "properties": {
            "interceptors": {
              "type": "Object",
              "name": "interceptors",
              "description": "Advanced interceptors for function composition"
            },
            "async": {
              "type": "Object",
              "name": "async",
              "description": "Support for async function composition"
            },
            "errorHandling": {
              "type": "Object",
              "name": "errorHandling",
              "description": "Error handling in composition chains"
            },
            "middleware": {
              "type": "Object",
              "name": "middleware",
              "description": "Middleware pattern support"
            }
          }
        },
        "DependencyInjection": {
          "name": "DependencyInjection",
          "properties": {
            "decorators": {
              "type": "Object",
              "name": "decorators",
              "description": "Decorator-based DI system"
            },
            "resolution": {
              "type": "Object",
              "name": "resolution",
              "description": "Automatic dependency resolution"
            },
            "circular": {
              "type": "Object",
              "name": "circular",
              "description": "Circular dependency detection"
            },
            "scoping": {
              "type": "Object",
              "name": "scoping",
              "description": "Scoped container support"
            }
          }
        },
        "EventSystem": {
          "name": "EventSystem",
          "properties": {
            "pubsub": {
              "type": "Object",
              "name": "pubsub",
              "description": "Pub/Sub pattern implementation"
            },
            "priority": {
              "type": "Object",
              "name": "priority",
              "description": "Event prioritization"
            },
            "async": {
              "type": "Object",
              "name": "async",
              "description": "Async event handling"
            },
            "cancellation": {
              "type": "Object",
              "name": "cancellation",
              "description": "Event cancellation"
            }
          }
        },
        "PromiseUtilities": {
          "name": "PromiseUtilities",
          "properties": {
            "lazy": {
              "type": "Object",
              "name": "lazy",
              "description": "Promise-based lazy evaluation"
            },
            "interception": {
              "type": "Object",
              "name": "interception",
              "description": "Promise chain interception"
            },
            "fallback": {
              "type": "Object",
              "name": "fallback",
              "description": "Fallback chain with tryNext"
            },
            "timeout": {
              "type": "Object",
              "name": "timeout",
              "description": "Timeout and retry support"
            }
          }
        }
      }
    }
  },
  {
    "path": "future/index.js",
    "info": {
      "name": "index.js",
      "description": "Experimental and cutting-edge features for next-generation JavaScript development.",
      "features": [
        {
          "namespace": "ExperimentalFeatures",
          "property": "templates",
          "type": "Object",
          "description": "Template rendering engine with reactive updates"
        },
        {
          "namespace": "ExperimentalFeatures",
          "property": "effects",
          "type": "Object",
          "description": "Advanced effect system for side-effect management"
        },
        {
          "namespace": "ExperimentalFeatures",
          "property": "reactive",
          "type": "Object",
          "description": "Reactive programming utilities and patterns"
        },
        {
          "namespace": "ExperimentalFeatures",
          "property": "async",
          "type": "Object",
          "description": "Next-generation async patterns and control"
        },
        {
          "namespace": "ExperimentalFeatures",
          "property": "experimental",
          "type": "Object",
          "description": "Cutting-edge JavaScript features exploration"
        }
      ],
      "examples": [
        {
          "caption": "",
          "code": "import { trp, ae } from 'xajs/future'\n// Create a template with reactive properties\nconst template = trp`\n<div>\n<h1>${state.title}</h1>\n<p>${state.content}</p>\n</div>\n`\n// Use advanced effects\nae.effect(() => {\n// Side effects automatically tracked and cleaned up\nconst subscription = api.subscribe(data => {\nstate.update(data)\n})\nreturn () => subscription.unsubscribe()\n})\n"
        }
      ],
      "exports": [
        "TR",
        "eff",
        "tpl"
      ],
      "related": [
        "."
      ],
      "see": [],
      "namespaces": {
        "ExperimentalFeatures": {
          "name": "ExperimentalFeatures",
          "properties": {
            "templates": {
              "type": "Object",
              "name": "templates",
              "description": "Template rendering engine with reactive updates"
            },
            "effects": {
              "type": "Object",
              "name": "effects",
              "description": "Advanced effect system for side-effect management"
            },
            "reactive": {
              "type": "Object",
              "name": "reactive",
              "description": "Reactive programming utilities and patterns"
            },
            "async": {
              "type": "Object",
              "name": "async",
              "description": "Next-generation async patterns and control"
            },
            "experimental": {
              "type": "Object",
              "name": "experimental",
              "description": "Cutting-edge JavaScript features exploration"
            }
          }
        }
      }
    }
  },
  {
    "path": "index.js",
    "info": {
      "name": "index.js",
      "description": "A thoughtfully crafted JavaScript utility library that combines classical utilities with modern programming paradigms. It provides a rich set of tools while maintaining a minimal footprint and high flexibility.",
      "features": [
        {
          "namespace": "CoreUtilities",
          "property": "classSystem",
          "type": "Object",
          "description": "Powerful class system with inheritance and mixins"
        },
        {
          "namespace": "CoreUtilities",
          "property": "decorators",
          "type": "Object",
          "description": "Flexible decorators for enhancing classes and methods"
        },
        {
          "namespace": "CoreUtilities",
          "property": "promises",
          "type": "Object",
          "description": "Promise utilities and deferred execution"
        },
        {
          "namespace": "CoreUtilities",
          "property": "types",
          "type": "Object",
          "description": "Type checking and object manipulation"
        },
        {
          "namespace": "DOMManipulation",
          "property": "vdom",
          "type": "Object",
          "description": "Lightweight virtual DOM implementation"
        },
        {
          "namespace": "DOMManipulation",
          "property": "events",
          "type": "Object",
          "description": "Event handling and delegation"
        },
        {
          "namespace": "DOMManipulation",
          "property": "touch",
          "type": "Object",
          "description": "Mobile-optimized touch events"
        },
        {
          "namespace": "DOMManipulation",
          "property": "url",
          "type": "Object",
          "description": "URL parsing and manipulation"
        },
        {
          "namespace": "FunctionalProgramming",
          "property": "composition",
          "type": "Object",
          "description": "Function composition and currying"
        },
        {
          "namespace": "FunctionalProgramming",
          "property": "di",
          "type": "Object",
          "description": "Dependency injection system"
        },
        {
          "namespace": "FunctionalProgramming",
          "property": "pubsub",
          "type": "Object",
          "description": "Pub/Sub event system"
        },
        {
          "namespace": "FunctionalProgramming",
          "property": "promiseUtils",
          "type": "Object",
          "description": "Promise-based utilities"
        },
        {
          "namespace": "LanguageExtensions",
          "property": "string",
          "type": "Object",
          "description": "Enhanced string manipulation"
        },
        {
          "namespace": "LanguageExtensions",
          "property": "array",
          "type": "Object",
          "description": "Advanced array operations"
        },
        {
          "namespace": "LanguageExtensions",
          "property": "object",
          "type": "Object",
          "description": "Object transformation utilities"
        },
        {
          "namespace": "LanguageExtensions",
          "property": "typeConversion",
          "type": "Object",
          "description": "Type conversion helpers"
        }
      ],
      "examples": [
        {
          "caption": "Class System",
          "code": "import { Class } from 'xajs/core';\nconst MyClass = Class({\n$extends: ParentClass,\n$mixins: [SomeMixin],\n$ctor() {\nthis.name = 'example';\n}\n});\n"
        },
        {
          "caption": "DOM Manipulation",
          "code": "import { h } from 'xajs/dom';\nconst vnode = h('div', { className: 'container' }, [\nh('h1', null, 'Hello AJS!'),\nh('button', { onClick: () => alert('Clicked!') }, 'Click Me')\n]);\n"
        },
        {
          "caption": "Functional Programming",
          "code": "import { helper } from 'xajs/functional';\nconst { tryNext } = helper;\nconst result = await tryNext([\nasync () => await primaryAPI(),\nasync () => await fallbackAPI()\n]);\n"
        }
      ],
      "exports": [
        "core",
        "dom",
        "fp",
        "functional",
        "future",
        "internal",
        "lang",
        "mobile"
      ],
      "related": [
        "."
      ],
      "see": [],
      "namespaces": {
        "CoreUtilities": {
          "name": "CoreUtilities",
          "properties": {
            "classSystem": {
              "type": "Object",
              "name": "classSystem",
              "description": "Powerful class system with inheritance and mixins"
            },
            "decorators": {
              "type": "Object",
              "name": "decorators",
              "description": "Flexible decorators for enhancing classes and methods"
            },
            "promises": {
              "type": "Object",
              "name": "promises",
              "description": "Promise utilities and deferred execution"
            },
            "types": {
              "type": "Object",
              "name": "types",
              "description": "Type checking and object manipulation"
            }
          }
        },
        "DOMManipulation": {
          "name": "DOMManipulation",
          "properties": {
            "vdom": {
              "type": "Object",
              "name": "vdom",
              "description": "Lightweight virtual DOM implementation"
            },
            "events": {
              "type": "Object",
              "name": "events",
              "description": "Event handling and delegation"
            },
            "touch": {
              "type": "Object",
              "name": "touch",
              "description": "Mobile-optimized touch events"
            },
            "url": {
              "type": "Object",
              "name": "url",
              "description": "URL parsing and manipulation"
            }
          }
        },
        "FunctionalProgramming": {
          "name": "FunctionalProgramming",
          "properties": {
            "composition": {
              "type": "Object",
              "name": "composition",
              "description": "Function composition and currying"
            },
            "di": {
              "type": "Object",
              "name": "di",
              "description": "Dependency injection system"
            },
            "pubsub": {
              "type": "Object",
              "name": "pubsub",
              "description": "Pub/Sub event system"
            },
            "promiseUtils": {
              "type": "Object",
              "name": "promiseUtils",
              "description": "Promise-based utilities"
            }
          }
        },
        "LanguageExtensions": {
          "name": "LanguageExtensions",
          "properties": {
            "string": {
              "type": "Object",
              "name": "string",
              "description": "Enhanced string manipulation"
            },
            "array": {
              "type": "Object",
              "name": "array",
              "description": "Advanced array operations"
            },
            "object": {
              "type": "Object",
              "name": "object",
              "description": "Object transformation utilities"
            },
            "typeConversion": {
              "type": "Object",
              "name": "typeConversion",
              "description": "Type conversion helpers"
            }
          }
        }
      }
    }
  },
  {
    "path": "internal/index.js",
    "info": {
      "name": "index.js",
      "description": "Core internal utilities and helper functions used across the library.",
      "features": [
        {
          "namespace": "InternalUtilities",
          "property": "typeChecking",
          "type": "Object",
          "description": "Type checking and validation utilities"
        },
        {
          "namespace": "InternalUtilities",
          "property": "objectUtils",
          "type": "Object",
          "description": "Object property manipulation helpers"
        },
        {
          "namespace": "InternalUtilities",
          "property": "helpers",
          "type": "Object",
          "description": "Common internal helper functions"
        },
        {
          "namespace": "InternalUtilities",
          "property": "shared",
          "type": "Object",
          "description": "Shared utilities used across other modules"
        }
      ],
      "examples": [
        {
          "caption": "",
          "code": "import { is, assign } from 'xajs/internal'\n// Type checking\nif (is.string(value)) {\n// Handle string type\n}\n// Safe object assignment\nconst merged = assign({}, source, {\nnewProp: 'value'\n})\n"
        }
      ],
      "exports": [
        "assign",
        "hasOwnProp",
        "is"
      ],
      "related": [
        "."
      ],
      "see": [],
      "namespaces": {
        "InternalUtilities": {
          "name": "InternalUtilities",
          "properties": {
            "typeChecking": {
              "type": "Object",
              "name": "typeChecking",
              "description": "Type checking and validation utilities"
            },
            "objectUtils": {
              "type": "Object",
              "name": "objectUtils",
              "description": "Object property manipulation helpers"
            },
            "helpers": {
              "type": "Object",
              "name": "helpers",
              "description": "Common internal helper functions"
            },
            "shared": {
              "type": "Object",
              "name": "shared",
              "description": "Shared utilities used across other modules"
            }
          }
        }
      }
    }
  },
  {
    "path": "lang/index.js",
    "info": {
      "name": "index.js",
      "description": "Advanced language utilities for string manipulation and code generation.",
      "features": [
        {
          "namespace": "LanguageUtilities",
          "property": "string",
          "type": "Object",
          "description": "String manipulation and transformation"
        },
        {
          "namespace": "LanguageUtilities",
          "property": "language",
          "type": "Object",
          "description": "Enhanced JavaScript language features"
        },
        {
          "namespace": "LanguageUtilities",
          "property": "generation",
          "type": "Object",
          "description": "Code generation utilities"
        },
        {
          "namespace": "LanguageUtilities",
          "property": "dsl",
          "type": "Object",
          "description": "DSL support tools"
        }
      ],
      "examples": [
        {
          "caption": "",
          "code": "import { MagicString } from 'xajs/lang'\n// Create a magic string for code manipulation\nconst code = new MagicString('function hello() { return \"world\" }')\n// Manipulate the code\ncode\n.update(8, 13, 'greet')\n.append('hello()')\nconsole.log(code.toString())\n// Output: function greet() { return \"world\" }hello()\n"
        }
      ],
      "exports": [
        "MagicString"
      ],
      "related": [
        "."
      ],
      "see": [],
      "namespaces": {
        "LanguageUtilities": {
          "name": "LanguageUtilities",
          "properties": {
            "string": {
              "type": "Object",
              "name": "string",
              "description": "String manipulation and transformation"
            },
            "language": {
              "type": "Object",
              "name": "language",
              "description": "Enhanced JavaScript language features"
            },
            "generation": {
              "type": "Object",
              "name": "generation",
              "description": "Code generation utilities"
            },
            "dsl": {
              "type": "Object",
              "name": "dsl",
              "description": "DSL support tools"
            }
          }
        }
      }
    }
  },
  {
    "path": "mobile/index.js",
    "info": {
      "name": "index.js",
      "description": "Comprehensive utilities for mobile web development and device detection.",
      "features": [
        {
          "namespace": "MobileUtilities",
          "property": "userAgent",
          "type": "Object",
          "description": "User agent parsing and detection"
        },
        {
          "namespace": "MobileUtilities",
          "property": "events",
          "type": "Object",
          "description": "Mobile-specific event handling"
        },
        {
          "namespace": "MobileUtilities",
          "property": "touch",
          "type": "Object",
          "description": "Touch and gesture support"
        },
        {
          "namespace": "MobileUtilities",
          "property": "device",
          "type": "Object",
          "description": "Device capability detection"
        },
        {
          "namespace": "MobileUtilities",
          "property": "responsive",
          "type": "Object",
          "description": "Responsive design helpers"
        }
      ],
      "examples": [
        {
          "caption": "",
          "code": "import { ua } from 'xajs/mobile'\n// Detect device and platform\nconst userAgent = ua.parse(navigator.userAgent)\nif (userAgent.isIOS) {\n// iOS specific handling\n} else if (userAgent.isAndroid) {\n// Android specific handling\n}\n"
        }
      ],
      "exports": [],
      "related": [],
      "see": [],
      "namespaces": {
        "MobileUtilities": {
          "name": "MobileUtilities",
          "properties": {
            "userAgent": {
              "type": "Object",
              "name": "userAgent",
              "description": "User agent parsing and detection"
            },
            "events": {
              "type": "Object",
              "name": "events",
              "description": "Mobile-specific event handling"
            },
            "touch": {
              "type": "Object",
              "name": "touch",
              "description": "Touch and gesture support"
            },
            "device": {
              "type": "Object",
              "name": "device",
              "description": "Device capability detection"
            },
            "responsive": {
              "type": "Object",
              "name": "responsive",
              "description": "Responsive design helpers"
            }
          }
        }
      }
    }
  },
  {
    "path": "mobile/ua/index.js",
    "info": {
      "name": "index.js",
      "description": "",
      "features": [
        "User Agent Analysis",
        "Comprehensive user agent parsing",
        "Browser and version detection",
        "Operating system identification",
        "Device type recognition",
        "Engine and rendering capabilities detection"
      ],
      "examples": [
        {
          "caption": "",
          "code": "import { UserAgent } from 'xajs/mobile/ua'\nconst ua = new UserAgent(navigator.userAgent)\nconsole.log({\nbrowser: ua.getBrowser(),\nos: ua.getOS(),\ndevice: ua.getDevice(),\nengine: ua.getEngine()\n})\n"
        }
      ],
      "exports": [
        "BaseParser",
        "BrowserParser",
        "DeviceParser",
        "EngineParser",
        "OSParser",
        "UserAgent"
      ],
      "related": [],
      "see": [],
      "namespaces": {}
    }
  },
  {
    "path": "mobile/ua/parsers/index.js",
    "info": {
      "name": "index.js",
      "description": "",
      "features": [
        "UA Parsers",
        "Modular parser architecture",
        "Extensible parsing rules",
        "High accuracy detection",
        "Customizable parsing strategies"
      ],
      "examples": [
        {
          "caption": "",
          "code": "import { BrowserParser, OSParser } from 'xajs/mobile/ua/parsers'\nconst browserInfo = new BrowserParser().parse(userAgent)\nconst osInfo = new OSParser().parse(userAgent)\nconsole.log({\nbrowser: browserInfo.name,\nversion: browserInfo.version,\nos: osInfo.name,\nplatform: osInfo.platform\n})\n"
        }
      ],
      "exports": [],
      "related": [],
      "see": [],
      "namespaces": {}
    }
  }
]