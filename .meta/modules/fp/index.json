{
  "name": "index.js",
  "description": "Core functional programming utilities focusing on pure function composition and immutable data handling.",
  "features": [
    {
      "namespace": "FunctionalCore",
      "property": "composition",
      "type": "Object",
      "description": "Pure function composition utilities"
    },
    {
      "namespace": "FunctionalCore",
      "property": "pointfree",
      "type": "Object",
      "description": "Point-free programming support"
    },
    {
      "namespace": "FunctionalCore",
      "property": "currying",
      "type": "Object",
      "description": "Function currying and partial application"
    },
    {
      "namespace": "FunctionalCore",
      "property": "immutable",
      "type": "Object",
      "description": "Immutable data handling patterns"
    }
  ],
  "examples": [
    {
      "caption": "",
      "code": "import { compose } from 'xajs/fp'\n// Create a pipeline of pure functions\nconst pipeline = compose(\nuppercase,\ntrim,\nnormalize\n)\n// Apply the transformation\nconst result = pipeline('  hello world  ')\n"
    }
  ],
  "exports": [
    "compose",
    "composeAsync"
  ],
  "related": [
    "."
  ],
  "see": [],
  "namespaces": {
    "FunctionalCore": {
      "name": "FunctionalCore",
      "properties": {
        "composition": {
          "type": "Object",
          "name": "composition",
          "description": "Pure function composition utilities"
        },
        "pointfree": {
          "type": "Object",
          "name": "pointfree",
          "description": "Point-free programming support"
        },
        "currying": {
          "type": "Object",
          "name": "currying",
          "description": "Function currying and partial application"
        },
        "immutable": {
          "type": "Object",
          "name": "immutable",
          "description": "Immutable data handling patterns"
        }
      }
    }
  }
}